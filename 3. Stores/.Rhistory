2+2
log(1)
10:20
10:40
leverage_dta <- readRDS("~/PM/USB/Andes - MEcA/Intersemestral/Big Data - Maching Lerning/Semana 1/leverage_dta.Rds")
head(db)
db<-readRDS("leverage_dta.Rds")
head(db)
ggplot (db)
library(bit)
library(bit64)
library(boot)
library(class)
library(cli)
library(clipr)
library(cluster)
library(codetools)
library(compiler)
library(cpp11)
library(crayon)
library(ellipsis)
library(fansi)
library(forcats)
library(foreign)
library(glue)
library(grid)
library(haven)
library(hms)
library(KernSmooth)
library(lattice)
library(lifecycle)
library(magrittr)
library(MASS)
library(Matrix)
library(mgcv)
library(nnet)
library(parallel)
library(pillar)
library(pkgconfig)
library(prettyunits)
library(progress)
library(purrr)
library(R6)
library(Rcpp)
library(readr)
library(rlang)
library(rpart)
library(spatial)
library(splines)
library(stats4)
library(survival)
library(tcltk)
library(tibble)
library(tidyselect)
library(tools)
library(translations)
library(tzdb)
library(utf8)
library(vctrs)
library(vroom)
library(withr)
db<-readRDS("leverage_dta.Rds")
head(db)
db<-readRDS("leverage_dta.Rds")
install.packages(c("spatial", "stats"))
install.packages(c("spatial", "stats"))
install.packages("pacman")
## llamar librerias de la sesion
require(pacman)
p_load(rio, # import/export data
tidyverse, # tidy-data
skimr, # summary data
caret) # Classification And REgression Training
## set seed
set.seed(0000)
## load data
db <- import("https://gitlab.com/Lectures-R/bd-meca-2022-summer/lecture-01/-/raw/main/data/GEIH_sample1.Rds")
## data dictionary is available here:
browseURL("https://ignaciomsarmiento.github.io/GEIH2018_sample/dictionary.html")
## df vs tibble
vignette("tibble")
db <- as_tibble(db)
library(tibble)
library(tidyselect)
set.seed(0000)
rnorm(10)
db <- import("https://gitlab.com/Lectures-R/bd-meca-2022-summer/lecture-01/-/raw/main/data/GEIH_sample1.Rds")
browseURL("https://ignaciomsarmiento.github.io/GEIH2018_sample/dictionary.html")
db <- as_tibble(db)
head(db)
tail(db)
skim(db)
summary(db$y_salary_m)
ggplot(data = db , mapping = aes(x = age , y = y_ingLab_m))
ggplot(data = db , mapping = aes(x = age , y = y_ingLab_m)) +
geom_point(col = "red" , size = 0.5)
ggplot(data = db ,
mapping = aes(x = age , y = y_ingLab_m , group=as.factor(formal) , color=as.factor(formal))) +
geom_point()
p <- ggplot(data=db) +
geom_histogram(mapping = aes(x=y_ingLab_m , group=as.factor(sex) , fill=as.factor(sex)))
p
p + scale_fill_manual(values = c("0"="red" , "1"="blue") , label = c("0"="Hombre" , "1"="Mujer") , name = "Sexo")
box_plot <- ggplot(data=db , mapping = aes(as.factor(estrato1) , totalHoursWorked)) +
geom_boxplot()
box_plot
box_plot <- box_plot +
geom_point(aes(colour=as.factor(sex))) +
scale_color_manual(values = c("0"="red" , "1"="blue") , label = c("0"="Hombre" , "1"="Mujer") , name = "Sexo")
box_plot
box_plot + theme_test()
h_hour = ggplot() + geom_histogram(data=db , aes(x=hoursWorkUsual) , fill="#99FF33" , alpha=0.5)
h_hour
db = db %>% mutate(esc_hoursWorkUsual = scale(hoursWorkUsual))
scale
?escale
h_hour + geom_histogram(data=db , aes(x=esc_hoursWorkUsual) , fill="#FF0066" , alpha=0.5)
BoxCoxTrans(db$y_ingLab_m)
BoxCoxTrans(db$y_ingLab_m , na.rm=T)
ggplot() + geom_boxplot(data=db ,aes(x=y_ingLab_m) , fill="darkblue" , alpha=0.5)
db = db %>% mutate(log_ingLab_m=log(y_ingLab_m))
ggplot() + geom_boxplot(data=db , aes(x=log_ingLab_m) , fill="coral1" , alpha=0.5)
quantile(x=db$p6426 , na.rm=T)
IQR(x=db$p6426 , na.rm=T)
iqr = IQR(x=db$p6426 , na.rm=T)
iqr = IQR(x=db$p6426 , na.rm=T)
db_out = db %>% subset(p6426 <= 4*iqr)
quantile(x=db_out$p6426 , na.rm=T)
db_out = db %>% subset(p6426 <= -2*iqr & p6426 <= 2*iqr)
quantile(x=db_out$p6426 , na.rm=T)
db_out = db %>% subset(p6426 <= -2*iqr & p6426 <= 2*iqr)==T
quantile(x=db_out$p6426 , na.rm=T)
nrow(db) - nrow(db_out)
db = db %>%
mutate(p6426_out = ifelse(test = p6426 > 4*iqr ,
yes = 1,
no = 0))
table(db$p6426_out)
q = quantile(db$p6426 , na.rm=T)
q
db = db %>%
mutate(p6426_q = case_when(p6426 < q[2] ~ "Q-1",
p6426 >= q[2] & p6426 < q[3] ~ "Q-2",
p6426 >= q[3] & p6426 < q[4] ~ "Q-3",
p6426 > q[4] ~ "Q-4"))
table(db$p6426_q)
head(db)
db %>% select(-Var.1)
db %>% select(-order)
db %>% select(starts_with("p6"))
library(bit)
db %>% select(starts_with("p6"))
db %>% select(directorio,contains("salary"))
## select variable: by class
db %>% select_if(is.character)
?select
table(ia.na(db$y_total_m))
table(is.na(db$y_total_m))
is.na(db$y_total_m)
is.na(db$y_total_m) %>% table()
db = db %>%
group_by(directorio) %>%
mutate(mean_y_total_m = mean(y_total_m,na.rm=T))
mutate(mean_y_total_m = mean(y_total_m,na.rm=T))
db_c = db %>% subset(is.na(y_total_m)==F)
nrow(db) - nrow(db_c)
is.na(db$y_total_m) %>% table()
?select
??mutate
require(pacman)
p_load(rio, # import/export data
tidyverse, # tidy-data
skimr, # summary data
caret) # Classification And REgression Training
R.version.string
View(db)
p_load(rio, # import/export data
tidyverse, # tidy-data
skimr, # summary data
caret) # Classification And REgression Training
2+2
10:20
q()
R.versión
R.version()
R.version()
R.Version()
library(tidyverse)
require("stargazer")
install.packages()
install.packages(stargazer)
require(tidyverse)
install.packages(mosaic)
(tidyverse)
(tidyverse)
library(mosaic)
?mosaic
install.packages("mosaic")
library(tidyverse)
library(mosaic)
set.seed(10101)
sample1<-rbinom(n=100,size=1,p=51)
sample1<-rbinom(n=100, size=1, p=51)
sample1<-rbinom(n=100, size=1, p=.51)
sum(sample1)
require(tidyverse)
plot(sample1)
library(tidyverse)
(tidyverse)
require(fabricatr)
requit¿re("stargazer")
require("stargazer")
install.packages("fabricatr")
install.packages("stargazer")
set.seed(101010)
db1<- fabricate(
N = 10000 ,
ability=rnorm(N,mean=.5,sd=2),
schooling=  round(runif(N, 2, 14)),
logwage =rnorm(N, mean=7+.15*schooling, sd=2)
)
library(tidyverse)
library(mosaic)
set.seed(10101)
sample1<- rbinom(n=100, size=1, p=.50)
sum(sample1)
# 57 - 57% son del boca, lo q espero es que sean 51, tengo una incertidumbre de 6
sample2<- rbinom(n=100, size=1, p.51)
# 57 - 57% son del boca, lo q espero es que sean 51, tengo una incertidumbre de 6
sample2<- rbinom(n=100, size=1, p=.51)
sum(sample2)
sample3<- rbinom(n=100, size=1, p=.51)
sum(sample3)
sample4<- rbinom(n=100, size=1, p=.51)
sum(sample4)
sample5<- rbinom(n=100, size=1, p=.51)
sum(sample5)
samples<- do(10000)*sum(rbinom(n=100, size=1, p=.51))
samples<- samples%>%mutate(prop(sum/100))
plot(samples)
hist(samples)
#*9 falta hacer el gráfico del histograma de las samples
histogram(samples)
#*9 falta hacer el gráfico del histograma de las samp
ggplot(samples)
geom_point(aes(x=x, y=y))
rm(list = ls())
setwd("C:/Users/amorales/OneDrive - ANI/Documentos/GitHub/Problem_Set_3_G16/3. Stores")
require(pacman)
p_load(tidyverse,
rvest,
writexl,
rio,
skimr,
sf,
pastecs,
stargazer,
PerformanceAnalytics,
naniar,
gtsummary,
stringr,
rgeos,
plotly,
leaflet,
tmaptools,
osmdata
)
##### Estadísticas descriptivas base train #####
## se importan bases de datos creada en 1.data_cleaning
df_hogares<- readRDS("df_house_mnz2.rds")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "1.5" , replacement = "2")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "2.5" , replacement = "3")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "3.25" , replacement = "3")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "3.375" , replacement = "3")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "3.5" , replacement = "4")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "4.5" , replacement = "5")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "5.25" , replacement = "5")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "5.5" , replacement = "6")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "5.75" , replacement = "6")
df_hogares$estrato <- str_replace_all (string= df_hogares$estrato , pattern = "5.875" , replacement = "6")
df_hogares$estrato <- as.numeric(df_hogares$estrato)
table(df_hogares$estrato)
df_hogares <- df_hogares %>% mutate(base_Neighborhood = paste0(base, " ", Neighborhood))
df_trainCH <- df_hogares %>% subset(base == "train" & Neighborhood == "Chapinero")
df_trainP <- df_hogares %>% subset(base == "train" & Neighborhood == "Poblado")
df_testCH <- df_hogares %>% subset(base == "test" & Neighborhood == "Chapinero")
df_testP <- df_hogares %>% subset(base == "test" & Neighborhood == "Poblado")
p <- ggplot(df_trainCH, aes(x = price)) +
geom_histogram(fill = "darkblue", alpha = 0.4) +
labs(x = "Valor de venta CH", y = "Cantidad") +
scale_x_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p)
p1 <- ggplot(df_trainP, aes(x = price)) +
geom_histogram(fill = "darkblue", alpha = 0.4) +
labs(x = "Valor de venta P", y = "Cantidad") +
scale_x_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p1)
#Relación entre distancia al parque más cercano y precio
p3 <- ggplot(df_trainCH, aes(x = dist_park, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque de la 93",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque de la 93 y el valor del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p3)
p4 <- ggplot(df_trainP, aes(x = dist_park, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque Lleras",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque Lleras y el valor del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p4)
p5 <- ggplot(df_trainCH, aes(x = bedrooms, | bathrooms, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque de la 93",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque de la 93 y el valor del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_trainCH, aes(x = bedrooms & bathrooms, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque de la 93",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque de la 93 y el valor del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_trainCH, aes(x = bedrooms, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque de la 93",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque de la 93 y el valor del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_trainCH, aes(x = bedrooms, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque de la 93",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque de la 93 y el valor del inmueble") +
scale_x_log10() +
theme_bw()
ggplotly(p5)
View(df_trainP)
p5 <- ggplot(df_hogares, aes(x = bedrooms, y = price, fill = base_Neighborhood) + geon_col            ) +
p5 <- ggplot(df_hogares, aes(x = bedrooms, y = price, fill = base_Neighborhood) + geon_col
p5 <- ggplot(df_hogares, aes(x = bedrooms, y = price, fill = base_Neighborhood) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque de la 93",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque de la 93 y el valor del inmueble") +
scale_x_log10() +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_hogares, aes(x = bedrooms, y = price, fill = base) +
geom_point(col = "darkblue", alpha = 0.4)
ggplotly(p5)
p5 <- ggplot(df_hogares, aes(x = bedrooms, y = price, fill = base) +
geom_point(col = "darkblue", alpha = 0.4)
ggplotly(p5)
df_train <- df_hogares %>% subset(base == "train")
p5 <- ggplot(df_train, aes(x = dist_park, y = price, color=Neighborhood)) +
geom_line() +
geom_point()
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = dist_park, y = price, color=Neighborhood)) +
geom_point()
ggplotly(p5)
p6 <- ggplot(df_train, aes(x = price, color=Neighborhood)) +
geom_histogram +
labs(x = "Valor de venta", y = "Cantidad") +
scale_x_log10(labels = scales::dollar) +
theme_bw()
p6 <- ggplot(df_train, aes(x = price, color=Neighborhood)) +
geom_point()+
labs(x = "Valor de venta", y = "Cantidad") +
scale_x_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p6)
p6 <- ggplot(df_train, aes(x = price, color=Neighborhood)) +
geom_point()
ggplotly(p6)
p6 <- ggplot(df_train, aes(x = price, color=Neighborhood)) +
geom_point()
ggplotly(p6)
p5 <- ggplot(df_train, aes(x = surface_total, y = price, color=Neighborhood)) +
geom_point()
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = estrato, y = price, color=Neighborhood)) +
geom_point()
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = estrato, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = estrato, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble") +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = estrato, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble") +
scale_y_log10(labels = scales::dollar)
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = estrato, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble")
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = estrato, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble") +
scale_y_log10
p5 <- ggplot(df_train, aes(x = estrato, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble") +
scale_y_log10(labels = scales::COP) +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = dis_bus_station, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble") +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p5)
p5 <- ggplot(df_train, aes(x = dist_bus_station, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Estrato",
y = "Valor venta inmueble",
title = "Relación entre estrato y valor del inmueble") +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p5)
p6 <- ggplot(df_train, aes(x = property_type, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Distancia a estación de bus",
y = "Valor venta inmueble",
title = "Relación distancia a servicio de transporte y valor del inmueble") +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p6)
p6 <- ggplot(df_train, aes(x = dist_school, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Distancia a estación de bus",
y = "Valor venta inmueble",
title = "Relación distancia a servicio de transporte y valor del inmueble") +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p6)
p6 <- ggplot(df_train, aes(x = bedrooms, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "Distancia a estación de bus",
y = "Valor venta inmueble",
title = "Relación distancia a servicio de transporte y valor del inmueble") +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p6)
p6 <- ggplot(df_train, aes(x = parking, y = price, color=Neighborhood)) +
geom_point()+
labs(x = "No. Habitaciones",
y = "Valor venta inmueble",
title = "Relación entre habitaciones y valor del inmueble") +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p6)
p4 <- ggplot(df_trainCH, aes(x = parking, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Distancia al parque de la 93",
y = "Valor venta inmueble",
title = "Relación entre distancia al parque de la 93 y el valor del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplotly(p4)
